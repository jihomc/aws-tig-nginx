# How to set up an Nginx reverse proxy to Grafana server with HTTPS on aws ec2 instance
# With Nginx, there is no need to enable HTTPS directly in Grafana

# Install Nginx
sudo apt install curl gnupg2 ca-certificates lsb-release
echo "deb http://nginx.org/packages/ubuntu `lsb_release -cs` nginx" \
    | sudo tee /etc/apt/sources.list.d/nginx.list
curl -fsSL https://nginx.org/keys/nginx_signing.key | sudo apt-key add -
sudo apt-key fingerprint ABF5BD827BD9BF62
sudo apt update
sudo apt install nginx
sudo systemctl start nginx

# Nginx configuration files
sudo vim /etc/nginx/nginx.conf
sudo vim /etc/nginx/sites-available/default
sudo vim /etc/nginx/site-enabled/default

# Create self-signed certificates for Nginx
sudo openssl req -x509 -nodes -newkey rsa:2048 -keyout /etc/ssl/nginx-selfsigned.key -out /etc/ssl/nginx-selfsigned.crt -days 365

# Grant Nginx permissions on the self-signed certificates
# Nginx user specified in nginx.conf
sudo chown "nginx":"nginx" /etc/ssl/nginx-selfsigned.*


# Use Certbot to install Lets Encrypt certificate to enable HTTPS

# Certbot installation -  Nginx Ubuntu 18.04 LTS (bionic)
https://certbot.eff.org/lets-encrypt/ubuntubionic-nginx
sudo certbot --nginx

# Post installation - modify Nginx configuration file to meet the recommended Mozilla ssl-config
see nginx.conf

# Mozilla ssl-config
https://ssl-config.mozilla.org/

# Certbot docs - where are the certificates?
https://certbot.eff.org/docs/using.html#where-are-my-certificates
/etc/letsencrypt/live/$domain/certificate.pem

# Nginx ssl_certificate_key
privkey.pem
# Nginx ssl_certificate
fullchain.pem
# Nginx ssl_trusted_certificate (if using OCSP Stapling)
chain.pem

# Replace with the IP address of your resolver
sudo vim /etc/resolv.conf
resolver 127.0.0.53 [::1]:5353 valid=30s;

# Nginx Server Config - HTTPS to proxied server

http {
	
	include /etc/nginx/mime.types;
        default_type application/octet-stream;
        keepalive_timeout 65;

	server {
		
                listen 80;
                listen [::]:80;

                server_name mydomain.net www.mydomain.net;
                return 301 https://$server_name$request_uri;
	}

	server {
	
                listen 443 ssl http2;
                listen [::]:443 ssl http2;
                server_name mydomain.net www.mydomain.net;

                ssl_certificate /etc/letsencrypt/live/mydomain.net/fullchain.pem;
                ssl_certificate_key /etc/letsencrypt/live/mydomain.net/privkey.pem;
                ssl_session_timeout 1d;
                ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
                ssl_session_tickets off;

                # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam.pem
                ssl_dhparam /etc/ssl/dhparam.pem;

		# intermediate configuration
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
		ssl_prefer_server_ciphers off;
		
		# HSTS (ngx_http_headers_module is required) (63072000 seconds)
		add_header Strict-Transport-Security "max-age=63072000" always;
		
		# OCSP stapling
		ssl_stapling on;
		ssl_stapling_verify on;
		
		# verify chain of trust of OCSP response using Root CA and Intermediate certs
		ssl_trusted_certificate /etc/letsencrypt/live/mydomain.net/chain.pem;
		
		# replace with the IP address of your resolver
		resolver 127.0.0.53 [::1]:5353 valid=30s;

                access_log /var/log/nginx/grafana-access.log;
                error_log /var/log/nginx/grafana-error.log;
         
                location / {
                        proxy_set_header Host $http_host;
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header X-Forwarded-Proto $scheme;
                        proxy_pass http://127.0.0.1:3000;
               }
       }
}


# Post Installation - Qualys SSL Server Test
https://www.ssllabs.com/ssltest/



